@page "/person/{Id:guid}"
@using BankingClient.Ui.Layout
@layout MainLayoutUser

<div class="d-flex justify-content-left">
  <div class="card d-flex flex-column shadow-sm" style="width: 32rem;">
    <div class="card-body">
      <h5 class="card-title ">Neue Person</h5>

      <EditForm Model="@_personDetail" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator/>

        @if (!string.IsNullOrEmpty(_errorMessage)) {
        <div class="alert alert-danger">@_errorMessage</div>
        }

        <div class="mb-3">
          <div class="d-flex align-items-center">
            <label for="firstname" class="form-label" style="min-width: 100px;">Vorname:</label>
            <InputText id="firstname" class="form-control" @bind-Value="_personDetail.Firstname" />
          </div>
          <ValidationMessage For="@(() => _personDetail.Firstname)" class="error-message text-danger mt-1" />
        </div>

        <div class="mb-3">
          <div class="d-flex align-items-center">
            <label for="lastname" class="form-label" style="min-width: 100px;">Nachname:</label>
            <InputText id="lastname" class="form-control" @bind-Value="_personDetail.Lastname" />
          </div>
          <ValidationMessage For="@(() => _personDetail.Lastname)" class="error-message text-danger mt-1" />
        </div>

        <div class="mb-3">
          <div class="d-flex align-items-center">
            <label for="email" class="form-label" style="min-width: 100px;">E-Mail:</label>
            <InputText id="email" class="form-control" @bind-Value="_personDetail.Email" />
          </div>
          <ValidationMessage For="@(() => _personDetail.Email)" class="error-message text-danger mt-1" />
        </div>

        <div class="mb-3">
          <div class="d-flex align-items-center">
            <label for="phone" class="form-label" style="min-width: 100px;">Telefon:</label>
            <InputText id="phone" class="form-control" @bind-Value="_personDetail.Phone" />
          </div>
          <ValidationMessage For="@(() => _personDetail.Phone)" class="error-message text-danger mt-1" />
        </div>

        <div class="form-floating mt-2 mb-1">
          <div class="d-flex justify-content-between align-items-center">
            <div class="file-input-wrapper">
              <button type="button" class="btn btn-outline-primary">Bild auswählen</button>
              <InputFile OnChange="HandleFileSelected" class="file-input"/>
            </div>
            @if (!string.IsNullOrEmpty(_imageBase64)) {
            <img src="@_imageBase64" alt="Selected Image" class="img-thumbnail" style="max-width: 100%; height: 100px;" />
            }
          </div>
        </div>
        
        <div class="button-container">
          <button type="submit" class="btn btn-outline-primary btn-equal-width">Senden</button>
          <button type="button" class="btn btn-outline-secondary btn-equal-width" @onclick="LeaveForm">Zurück</button>
          <button type="button" class="btn btn-outline-danger btn-equal-width" @onclick="CancelOperation">Abbrechen</button>
        </div>
        
      </EditForm>
    </div>
  </div>
</div>

<style>
  .file-input-wrapper {
    position: relative;
    display: inline-block;
  }

  .file-input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
  }

  .error-message {
    font-size: 0.875rem; /* Smaller font for error messages */
    margin-top: 0.25rem; /* Consistent spacing above the error message */
  }

  .d-flex.align-items-center .form-control {
    flex: 1; /* Ensures the input field takes up the available space next to the label */
  }
  
  .btn-equal-width {
    width: 100%;
  }
  .button-container {
    display: flex;
    gap: 10px;
    margin-top: 30px;
  }
</style>